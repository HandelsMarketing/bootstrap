<?php
/** @var HeaderModule $this */
?><div class="headerModule-layer headerModule-background headerModule-background--<?= $this->getBackgroundType(); ?>" id="headerModule--<?= $this->getID(); ?>">
<div id="youtube_player_<?= $this->getID(); ?>" width="100%"></div>
</div><div class="headerModule-layer headerModule-overlay">
	<div id="youtube_overlay_<?= $this->getID(); ?>">
		<div class="headerModule-overlay-ended" style="background-image: url('<?= $this->getVideoPlaybackFinishedImage() ?>');"></div>
	</div>
</div>
<script>
	<?php


	if( !$this->isYTApiInitiated()): ?>
		var youtube_players_to_load = [];

		// 2. This code loads the IFrame Player API code asynchronously.
		var tag = document.createElement('script');
		tag.src = "https://www.youtube.com/iframe_api";
		var firstScriptTag = document.getElementsByTagName('script')[0];
		firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);





		// 3. This function creates an <iframe> (and YouTube player)
		//    after the API code downloads.
		var players = {};
		function onYouTubeIframeAPIReady() {
			for( var i = 0; i<youtube_players_to_load.length; i++) {
				var player = new YT.Player('youtube_player_'+youtube_players_to_load[i].id, youtube_players_to_load[i].options);
				players['player_'+youtube_players_to_load[i].id] = player;
			}
		}


	<?php
		$this->YTApiInitiated();
	endif; ?>


	var width = document.getElementById('headerModule--<?= $this->getID(); ?>').offsetWidth;
	var ratio = <?= $this->getVideoRatio(); ?>;

	document.getElementById('headerModule--<?= $this->getID(); ?>').className += " headerModule-background--videoloaded";

	if( width * ratio < 300) {
		height = 300;
		width = 300 / ratio;
	} else {
		height = width * ratio;
	}
	youtube_players_to_load.push({
		'id': <?= $this->getID(); ?>,
		'options': {
			height: height,
			width: width,
			videoId: '0gzt-irKjsw',
			events: {
				'onReady': onPlayerReady_<?= $this->getID(); ?>,
				'onStateChange': onPlayerStateChange_<?= $this->getID(); ?>
			},
			playerVars: {
				'controls': 0,
				'showinfo': 0,
				'modestbranding': 1
			}
		}
	});








	// 4. The API will call this function when the video player is ready.
	function onPlayerReady_<?= $this->getID(); ?>(event) {
		event.target.playVideo();
		event.target.mute();
	}

	function onPlayerStateChange_<?= $this->getID(); ?>(event) {
		switch (event.data) {
			case YT.PlayerState.ENDED:
				var cl = 'headerModule-overlay--ended';
				break;
			case -1: // unstarted
				var cl = "headerModule-overlay--unstarted";
				break;
			case YT.PlayerState.PAUSED:
				var cl = "headerModule-overlay-paused";
				break;
			default:
				var cl = "";
				break;
		}
		document.getElementById("youtube_overlay_<?= $this->getID(); ?>").className = cl;
	}
</script>